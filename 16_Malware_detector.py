#!/usr/bin/python
# -*- coding: utf-8 -*-

#Challenge 16:  Malware detector

#La heuristica elegida será la siguiente:
#-Se considerará unicamente el proceso con más llamadas al sistema
#-Se descartaran las llamadas que sean tambien máximas en procesos seguros
#-Se irán actualizando los criterios conforme se vayan añadiendo entradas para ir descartando las llamadas "habituales" no solo en procesos malware sino también en procesos safe


R=int(raw_input())
U=int(raw_input())
N=int(raw_input())

safes=[]
malwares=[]
safe_call=set()
malware_call=set()
union=set()
for input in range(R):
    data=raw_input().split()
    calls=[int(s) for s in data[1:]]

    calls_trabajo=calls[:]
    maximo=calls_trabajo.index(max(calls_trabajo))
    while maximo in union:
        del calls_trabajo[maximo]
        maximo=calls_trabajo.index(max(calls_trabajo))
    
    if data[0]=="S":
        safes.append(calls)
        safe_call.add(maximo)
    else:
        malwares.append(calls)
        malware_call.add(maximo)
        
    union=malware_call & safe_call
    malware_call=malware_call - union
    safe_call=safe_call - union
    
call_unknown_malwares=0
for input in range(U):
    data=raw_input().split()
    calls=[int(s) for s in data]
    calls_trabajo=calls[:]
    maximo=calls_trabajo.index(max(calls_trabajo))
    while maximo in union:
        del calls_trabajo[maximo]
        maximo=calls_trabajo.index(max(calls_trabajo))
    
    if maximo in malware_call:
        call_unknown_malwares+=sum(calls)
        
print call_unknown_malwares
